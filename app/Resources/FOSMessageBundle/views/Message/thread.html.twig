{% extends 'base.html.twig' %}
{% block heading %} {% endblock %}
{% block title %} {{ thread.subject }} {% endblock %}
{% block body %}

<div id="thread-container">
    <div id="thread-inner-container">
        <a href="/messaging" class="btn btn-secondary messaging-back-button">Back to Inbox</a>
        <h2>{{ thread.subject }}</h2>
        <div id="messages-container">
            {% for message in thread.messages %}

            {#{#}
            {#Flags should be indicated#}

            {#{% if message.flag %}{% endif %} - regular flag by algorithm#}
            {#{% if message.receiverflag %}{% endif %} - flag by receiver#}
            {#}#}

                {% if message.sender == app.user.username %}
                    {% set sender = 'You' %}
                    {% if message.flag or message.receiverflag %}
                        <div class="alert alert-danger" id="msg-container" role="alert">
                    {% else %}
                        <div class="alert alert-success" id="msg-container" role="alert">
                    {% endif %}
                {% else %}
                    {% set sender = message.sender %}

                    {% if message.flag or message.receiverflag %}
                        <div class="alert alert-danger" id="msg-container" role="alert">
                    {% else %}
                        <div class="alert alert-secondary" id="msg-container" role="alert">
                    {% endif %}
                {% endif %}
                    <div class="messenger_thread_message">
                        <div class="messenger_thread_message_info text-muted">
                            {% trans with {'%sender%': sender|e, '%date%': message.createdAt|date} from 'FOSMessageBundle' %}message_info{% endtrans %}
                            {% if message.sender != app.user.username and not message.flag and not message.receiverflag %}
                               <button type="button" id="receiver_flag" value={{ message.id }} class="hover-reveal">
                                   <b><i class="far fa-flag"></i></b><a href="#"><i>Flag as bullying</i></a>
                               </button>
                            {% elseif message.flag or message.receiverflag %}
                               <span class="flagged-text">
                                   <b><i class="fas fa-flag"></i></b><i>Flagged for bullying</i>
                               </span>
                            {% endif %}
                        </div>

                        <div class="messenger_thread_message_body" id="message_{{ message.id }}">
                            {{ message.body }}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        {#<h5>{% trans from 'FOSMessageBundle' %}reply{% endtrans %}</h5>#}

        <div class="card">
            <div class="card-body">
                <form action="{{ url('fos_message_thread_view', {'threadId': thread.id}) }}" method="post">
                    {{ form_widget(form) }}

                    <input class="btn btn-lg btn-primary btn-block" type="submit" value="Send message" onclick="refreshing = true"/>
                </form>
            </div>
        </div>

    </div>

</div>


{% endblock %}

{% block javascripts %}
    <script>
        var objDiv = document.getElementById("messages-container");
        objDiv.scrollTop = objDiv.scrollHeight;

        var navItem = document.getElementById("inbox-nav-item");
        navItem.classList.add("active");
    </script>

    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script>
        refreshing = false;
        setInterval(function(){
            if(!refreshing)
            $.ajax({
                url: "{{ (path('ajax_update_messages')) }}",
                type: "POST",
                dataType: "json",
                data: {
                    "thread_id": {{ thread.id }},
                    "last_update": "{{thread.lastUpdated|date("H/i/s/d/m/Y")}}"
                },
                success: function (data)
                {
                    if(data == "Refresh")
                        location.reload();
                }
            });

        }, 5000);

        $(function () {
            $('button#receiver_flag').on('click', function () {
                var messageId = $(this).val();
                $.ajax({
                        url: "/ajax_receiver_flag/" + messageId,
                        type: "POST",
                        dataType: "json",
                        data: {
                            "message_id": messageId
                        },
                        success: function (data)
                        {
                            
                        }
                    });
                });
            });
    </script>

    <script>
        var bgcolor = '#ddd';
        $(".alert").on("mouseenter", function(e) {

            bgcolor = rgb2hex($(this).css("background-color"));
         });

        $(".hover-reveal").on("mouseenter", function(e) {
            $(this).css('background', LightenDarkenColor(bgcolor,-30));
         });

        $(".hover-reveal").on("mouseleave", function(e) {
            $(this).css('background', 'transparent');
        });

        function rgb2hex(rgb) {
            if (/^#[0-9A-F]{6}$/i.test(rgb)) return rgb;

            rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
            function hex(x) {
                return ("0" + parseInt(x).toString(16)).slice(-2);
            }
            return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
        }


        function LightenDarkenColor(col, amt) {
            var usePound = false;

            if (col[0] == "#") {
                col = col.slice(1);
                usePound = true;
            }

            var num = parseInt(col,16);

            var r = (num >> 16) + amt;

            if (r > 255) r = 255;
            else if  (r < 0) r = 0;

            var b = ((num >> 8) & 0x00FF) + amt;

            if (b > 255) b = 255;
            else if  (b < 0) b = 0;

            var g = (num & 0x0000FF) + amt;

            if (g > 255) g = 255;
            else if (g < 0) g = 0;

            return (usePound?"#":"") + (g | (b << 8) | (r << 16)).toString(16);

        }
    </script>
{% endblock %}